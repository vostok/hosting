const Vostok.Hosting.Components.Shutdown.ShutdownConstants.CutMaximumRelativeValue = 0.1 -> double
const Vostok.Hosting.Components.ThreadPool.ThreadPoolConstants.DefaultThreadPoolMultiplier = 32 -> int
static readonly Vostok.Hosting.Components.Shutdown.ShutdownConstants.CutAmountForBeaconTimeout -> System.TimeSpan
static readonly Vostok.Hosting.Components.Shutdown.ShutdownConstants.CutAmountForExternalTimeout -> System.TimeSpan
static readonly Vostok.Hosting.Components.Shutdown.ShutdownConstants.DefaultBeaconShutdownTimeout -> System.TimeSpan
static readonly Vostok.Hosting.Components.Shutdown.ShutdownConstants.DefaultShutdownTimeout -> System.TimeSpan
static Vostok.Hosting.Components.Diagnostics.HealthTrackerHelper.LaunchPeriodicalChecks(Vostok.Hosting.Abstractions.IVostokApplicationDiagnostics diagnostics, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> void
static Vostok.Hosting.Components.Metrics.AnnotationsHelper.ReportInitialized(Vostok.Hosting.Abstractions.IVostokApplicationIdentity identity, Vostok.Metrics.IMetricContext context) -> void
static Vostok.Hosting.Components.Metrics.AnnotationsHelper.ReportLaunching(Vostok.Hosting.Abstractions.IVostokApplicationIdentity identity, Vostok.Metrics.IMetricContext context) -> void
static Vostok.Hosting.Components.Metrics.AnnotationsHelper.ReportStopping(Vostok.Hosting.Abstractions.IVostokApplicationIdentity identity, Vostok.Metrics.IMetricContext context) -> void
static Vostok.Hosting.Helpers.IVostokHostingEnvironmentExtensions.Warmup(this Vostok.Hosting.Abstractions.IVostokHostingEnvironment environment, Vostok.Hosting.VostokHostingEnvironmentWarmupSettings settings) -> void
Vostok.Hosting.Components.Diagnostics.HealthTrackerHelper
Vostok.Hosting.Components.Metrics.AnnotationsHelper
Vostok.Hosting.Components.Shutdown.ShutdownConstants
Vostok.Hosting.Components.ThreadPool.DynamicThreadPoolTracker
Vostok.Hosting.Components.ThreadPool.DynamicThreadPoolTracker.Dispose() -> void
Vostok.Hosting.Components.ThreadPool.DynamicThreadPoolTracker.DynamicThreadPoolTracker(System.Func<Vostok.Hosting.Components.ThreadPool.ThreadPoolSettings> settingsProvider, Vostok.Hosting.Abstractions.IVostokApplicationLimits limits, Vostok.Logging.Abstractions.ILog log) -> void
Vostok.Hosting.Components.ThreadPool.ThreadPoolConstants
Vostok.Hosting.Helpers.IVostokHostingEnvironmentExtensions
Vostok.Hosting.VostokHostingEnvironmentFactorySettings.SetupShutdownSupported.get -> bool
Vostok.Hosting.VostokHostingEnvironmentFactorySettings.SetupShutdownSupported.set -> void
Vostok.Hosting.VostokHostingEnvironmentWarmupSettings
Vostok.Hosting.VostokHostingEnvironmentWarmupSettings.LogApplicationConfiguration.get -> bool
Vostok.Hosting.VostokHostingEnvironmentWarmupSettings.LogApplicationConfiguration.set -> void
Vostok.Hosting.VostokHostingEnvironmentWarmupSettings.LogDotnetEnvironmentVariables.get -> bool
Vostok.Hosting.VostokHostingEnvironmentWarmupSettings.LogDotnetEnvironmentVariables.set -> void
Vostok.Hosting.VostokHostingEnvironmentWarmupSettings.VostokHostingEnvironmentWarmupSettings() -> void
Vostok.Hosting.VostokHostingEnvironmentWarmupSettings.WarmupConfiguration.get -> bool
Vostok.Hosting.VostokHostingEnvironmentWarmupSettings.WarmupConfiguration.set -> void
Vostok.Hosting.VostokHostingEnvironmentWarmupSettings.WarmupZooKeeper.get -> bool
Vostok.Hosting.VostokHostingEnvironmentWarmupSettings.WarmupZooKeeper.set -> void